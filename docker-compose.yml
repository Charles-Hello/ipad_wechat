version: "2.3"

#注意看注释。

services:
  redis:
    image: redis:latest
    container_name: redis
    restart: unless-stopped
    volumes:
      - ./redis/redis.conf:/etc/redis/redis.conf
      - ./redis/data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
#    ports:
#      - "9191:9898"  #搭建自身的reids仅仅为nolanwechat服务。「①与下方对应」需要则自己开启注释(一般不改，自定义忽略)
    networks:
      mynet1:
        ipv4_address: 172.100.0.2  #如果冲突则填写其他的字段或尾数(一般不改，自定义忽略)

  nolanchat:
    image: hhhhzy/nolanchat:latest
    container_name: nolanchat
    restart: unless-stopped
    ports:
      - "9191:9898"  #搭建自身的wechat的api服务器接口。「①与下方对应」(这里的映射方便不同环境的pybot进行玩耍) (如冲突请自行修改端口。一般不改，自定义忽略)
    volumes:
      - ./NolanChat/Config:/app/Config
      - ./NolanChat/logs:/app/logs
    privileged: true
    depends_on:
      - redis
    networks:
      mynet1:
        ipv4_address: 172.100.0.3 #如果冲突则填写其他的字段或尾数(一般不改，自定义忽略)


  ipad_wechat:
    image: 1140601003/ipad_wechat
    container_name: ipad_wechat
    restart: unless-stopped
    ports:
      - "30920:30920" #暴露扫码端口与下方[QRCODE_PORT]对应！默认开启30920(一般不改，自定义忽略)
    environment:
      - QRCODE_PORT=30920 # 选择是否开启网页扫码端口(默认选择端口为：30920，如冲突请自行修改端口)
      - QRCODE_EMAIL=None,None # 选择是否开启邮箱接收(输入你的邮箱地址，邮箱默认为None(代表不发送，反之则一定执行邮箱发送图片)，例如：QRCODE_EMAIL=1140301003@qq.com,123)（可选,需要则修改none）
      - NOLAN_URL=http://172.100.0.3:9898/api #搭建自身的wechat的api接口地址「①与上方对应」（一般不改，如改则只需修改ip即可。无需改端口）
      - CALL_BACK_IP=http://106.53.99.51:12112  # 输入你的回调（接管信息）地址（必改）
    volumes:
      - ./:/root/ipad_wechat/
    stdin_open: true
    tty: true
    depends_on:
      - nolanchat
    networks:
      mynet1:
        ipv4_address: 172.100.0.4  #如果冲突则填写其他的字段或尾数(一般不改，自定义忽略)

networks:
   mynet1:
      ipam:
         config:
         - subnet: 172.100.0.0/16  #如果冲突则填写其他的字段(一般不改，自定义忽略)
