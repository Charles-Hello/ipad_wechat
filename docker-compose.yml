version: "2.2"

services:
  tinyproxy:
    image: dannydirect/tinyproxy:latest
    container_name: tinyproxy
    restart: unless-stopped
    ports:
      - "18838:8888" #这里搭建本地代理端口【与下方的PROXY_IP_PORT一样】[如果自身有自建的本地代理，这里可以把整个tinyproxy服务注释了！]
    command:
      - ANY
    tty: false


  ipad_wechat:
    image: 1140601003/ipad_wechat
    container_name: ipad_wechat
    restart: unless-stopped
    ports:
#      - "8022:22" #暴露ssh端口[本地docker环境——debug]
      - "30920:30920" #暴露扫码端口与下方[QRCODE_PORT]对应！默认开启30920
    environment:
      - QRCODE_PORT=30920 # 选择是否开启网页扫码端口(默认选择端口为：30920，如需更换请自行修改端口)（linux必填，其他系统可不填）
      - QRCODE_EMAIL # 选择是否开启邮箱接收(输入你的邮箱地址，邮箱默认为None(代表不发送，反之则一定执行邮箱发送图片)，例如：1140***@qq.com, "防伪字符串")（可选）
      - PROXY_IP_ADDRESS=106.53.99.58 # 输入你微信代理地区地址和端口(决定你的微信登录的城市)[ps:关于内网的话，需要找个公网穿透出来除非本身就是公网。]（必改）
      - PROXY_IP_PORT=18838 #本地代理端口（必改）
      - NOLAN_URL=http://api.nolankka.top:9898/api #诺兰的swagger接口地址（诺兰接口不动就不填）
      - CALL_BACK_IP=http://106.53.99.58:12112  # 输入你的回调（接管信息）地址（必改）
    volumes:
      - ./:/root/ipad_wechat/
    stdin_open: true
    tty: true
    depends_on:
      - tinyproxy